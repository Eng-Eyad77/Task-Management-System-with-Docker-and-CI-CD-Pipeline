pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Eng-Eyad77/Testing-Project.git'
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean compile'
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Package') {
            steps {
                sh 'mvn package -DskipTests=false'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t mvc-image .'
                }
            }
        }

        stage('Deploy Docker Container') {
            steps {
                script {
                    // التأكد من إيقاف وحذف الحاوية القديمة إن وجدت
                    sh 'docker stop spring-boot-app || true && docker rm spring-boot-app || true'

                    // تشغيل الحاوية بإعدادات جديدة مع إعادة تشغيل تلقائي
                    sh 'docker run -d --name spring-boot-app -p 8081:8081 --restart unless-stopped mvc-image'
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
