pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Eng-Eyad77/Testing-Project.git'
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean test -DskipTests=false'
            }
        }

        stage('Package Docker Image') {
            steps {
                script {
                    sh 'docker build -t mvc-image .'
                }
            }
        }

        stage('Deploy Docker Container') {
            steps {
                script {
                    sh 'docker stop spring-boot-app || true && docker rm spring-boot-app || true'
                    sh 'docker run -d --name spring-boot-app -p 8081:8080 mvc-image'
                }
            }
        }
    }

    post {
        success {
            script {
                def committer = sh(script: "git log -1 --pretty=format:'%an'", returnStdout: true).trim()
                mail to: 'bruhjawad@gmail.com',
                     subject: "SUCCESS: Build and Deployment Succeeded",
                     body: """Good news! The Jenkins pipeline executed successfully and your project was deployed.

Committer: ${committer}
"""
            }
            echo 'Build and deployment succeeded!'
        }
        failure {
            script {
                def committer = sh(script: "git log -1 --pretty=format:'%an'", returnStdout: true).trim()
                mail to: 'bruhjawad@gmail.com',
                     subject: "FAILURE: Build or Deployment Failed",
                     body: """Unfortunately, the Jenkins pipeline failed. Please check the console output for more details.

Committer: ${committer}
"""
            }
            echo 'Build or deployment failed.'
        }
    }
}
